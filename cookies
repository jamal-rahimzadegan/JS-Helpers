export default new class Cookies {
  set: Function;
  multiSet: Function;
  get: Function;
  getAll: Function;
  delete: Function;
  deleteAll: Function;

  set = (name, value, days, path) => {
    document.cookie = name + '=' + value + this.setPath(path) + this.setExpiration(days);
  };

  multiSet = (pairs) => {
    pairs.map((cookie) => {
      const { name, value, days, path } = cookie;
      this.set(name, value, days, path);
    });
  };

  get = (name) => {
    const targetCookie = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
    return targetCookie ? targetCookie[2] : null;
  };

  getAll = () => {
    let allCookies = document.cookie.split(';');
    let formattedCookies = {};
    let i = 0;
    for (i; i < allCookies.length; i++) {
      let pair = allCookies[i].split('=');
      formattedCookies[(pair[0] + '').trim()] = unescape(pair.slice(1).join('='));
    }
    return formattedCookies;
  };

  delete = (name) => (document.cookie = name + '=; Max-Age=-99999999;');

  deleteAll = () => {
    let allCookies = document.cookie.split(';');
    allCookies.map((cookieItem) => this.delete(cookieItem.split('=')[0]));
  };

  private setPath = (path) => `;path=${path || '/'}`;

  private   setExpiration = (days = 365) => {
    let date = new Date();
    date.setTime(date.getTime() + 24 * 60 * 60 * 1000 * days);
    return ';expires=' + date.toUTCString();
  };
}
